openapi: 3.0
info:
  description: This is a sample se
  version: 1.0.0
  title: Younigems.in 
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: http://younigems.in/api/web/v1/user
    description: Production server
paths:
  /signup:
    post:
      tags:
        - Users
      summary: Signup 
      description: Api for signup a new user
      requestBody:
        # description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - first_name
                - last_name
                - email
                - password
              properties:
                  first_name:          
                    type: string
                  last_name:    
                    type: string
                  email:
                    type: string
                  password:
                    type: string
                  mobile: 
                    type: number
                  home_town:
                    type: string
                  state:
                    type: string
                  country:
                    type: string
                  gender:
                    type: string
                  profile_pic:
                    type: string
                  dob:
                    type: string
              example:
                first_name: keshav
                last_name: suman
                email: keshavsuman96@gmail.com
                password: 123456789
                
          text/plain:
            schema:
              type: string
      responses:
        '200':
          description: Successful operation
        '500':
          description: Server side error
        '400':
          description: User already exists
  /login:
    post:
      tags:
        - Users
      summary: User login
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                  email:
                    type: string
                  password:
                    type: string
              example:
                email: keshavsuman96@gmail.com
                password: 123456789
      responses:
        '200':
          description: User loggedin successfully
  /updateProfile:
    post:
      tags:
        - Users
      summary: Update user profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: 
                - email
                - password
              properties:
                email:
                  type: string
                password:
                  type: string
              example:
                
      responses:
        '200':
          description: ae
  /profile/{userId}:
    get:
      tags:
        - Users
      summary: Get user profile
      parameters:
        - name: userId
          in: path
          description: User ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ae        